package pqt.dss.cod.model.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Timestamp;

import java.sql.Types;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Char;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 06 12:13:30 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssChangeOfDesignationImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CodIdPk,
        AgentNoFk,
        CurrentRank,
        AgentCnic,
        BranchName,
        NewRank,
        EffectiveFrom,
        Remarks,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        PromoteDemote,
        NewBranch,
        BranchStatus,
        DssStatus,
        BranchNotifIdFk,
        DssNotifIdFk,
        CodDocNumber,
        WorkflowNotificationId,
        WorkflowStatus,
        DssCodMgrRecruitmentForm,
        DssCodNewRecruitedMgr;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CODIDPK = AttributesEnum.CodIdPk.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int CURRENTRANK = AttributesEnum.CurrentRank.index();
    public static final int AGENTCNIC = AttributesEnum.AgentCnic.index();
    public static final int BRANCHNAME = AttributesEnum.BranchName.index();
    public static final int NEWRANK = AttributesEnum.NewRank.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int PROMOTEDEMOTE = AttributesEnum.PromoteDemote.index();
    public static final int NEWBRANCH = AttributesEnum.NewBranch.index();
    public static final int BRANCHSTATUS = AttributesEnum.BranchStatus.index();
    public static final int DSSSTATUS = AttributesEnum.DssStatus.index();
    public static final int BRANCHNOTIFIDFK = AttributesEnum.BranchNotifIdFk.index();
    public static final int DSSNOTIFIDFK = AttributesEnum.DssNotifIdFk.index();
    public static final int CODDOCNUMBER = AttributesEnum.CodDocNumber.index();
    public static final int WORKFLOWNOTIFICATIONID = AttributesEnum.WorkflowNotificationId.index();
    public static final int WORKFLOWSTATUS = AttributesEnum.WorkflowStatus.index();
    public static final int DSSCODMGRRECRUITMENTFORM = AttributesEnum.DssCodMgrRecruitmentForm.index();
    public static final int DSSCODNEWRECRUITEDMGR = AttributesEnum.DssCodNewRecruitedMgr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssChangeOfDesignationImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.cod.model.eo.DssChangeOfDesignation");
    }


    /**
     * Gets the attribute value for CodIdPk, using the alias name CodIdPk.
     * @return the value of CodIdPk
     */
    public oracle.jbo.domain.Number getCodIdPk() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CODIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CodIdPk.
     * @param value value to set the CodIdPk
     */
    public void setCodIdPk(oracle.jbo.domain.Number value) {
        setAttributeInternal(CODIDPK, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for CurrentRank, using the alias name CurrentRank.
     * @return the value of CurrentRank
     */
    public String getCurrentRank() {
        return (String) getAttributeInternal(CURRENTRANK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentRank.
     * @param value value to set the CurrentRank
     */
    public void setCurrentRank(String value) {
        setAttributeInternal(CURRENTRANK, value);
    }

    /**
     * Gets the attribute value for AgentCnic, using the alias name AgentCnic.
     * @return the value of AgentCnic
     */
    public String getAgentCnic() {
        return (String) getAttributeInternal(AGENTCNIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentCnic.
     * @param value value to set the AgentCnic
     */
    public void setAgentCnic(String value) {
        setAttributeInternal(AGENTCNIC, value);
    }

    /**
     * Gets the attribute value for BranchName, using the alias name BranchName.
     * @return the value of BranchName
     */
    public String getBranchName() {
        return (String) getAttributeInternal(BRANCHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchName.
     * @param value value to set the BranchName
     */
    public void setBranchName(String value) {
        setAttributeInternal(BRANCHNAME, value);
    }

    /**
     * Gets the attribute value for NewRank, using the alias name NewRank.
     * @return the value of NewRank
     */
    public String getNewRank() {
        return (String) getAttributeInternal(NEWRANK);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewRank.
     * @param value value to set the NewRank
     */
    public void setNewRank(String value) {
        setAttributeInternal(NEWRANK, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public Date getEffectiveFrom() {
        return (Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }


    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }


    /**
     * Gets the attribute value for PromoteDemote, using the alias name PromoteDemote.
     * @return the value of PromoteDemote
     */
    public String getPromoteDemote() {
        return (String) getAttributeInternal(PROMOTEDEMOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromoteDemote.
     * @param value value to set the PromoteDemote
     */
    public void setPromoteDemote(String value) {
        setAttributeInternal(PROMOTEDEMOTE, value);
    }


    /**
     * Gets the attribute value for NewBranch, using the alias name NewBranch.
     * @return the value of NewBranch
     */
    public String getNewBranch() {
        return (String) getAttributeInternal(NEWBRANCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewBranch.
     * @param value value to set the NewBranch
     */
    public void setNewBranch(String value) {
        setAttributeInternal(NEWBRANCH, value);
    }


    /**
     * Gets the attribute value for BranchStatus, using the alias name BranchStatus.
     * @return the value of BranchStatus
     */
    public String getBranchStatus() {
        return (String) getAttributeInternal(BRANCHSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchStatus.
     * @param value value to set the BranchStatus
     */
    public void setBranchStatus(String value) {
        setAttributeInternal(BRANCHSTATUS, value);
    }

    /**
     * Gets the attribute value for DssStatus, using the alias name DssStatus.
     * @return the value of DssStatus
     */
    public String getDssStatus() {
        return (String) getAttributeInternal(DSSSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssStatus.
     * @param value value to set the DssStatus
     */
    public void setDssStatus(String value) {
        setAttributeInternal(DSSSTATUS, value);
    }

    /**
     * Gets the attribute value for BranchNotifIdFk, using the alias name BranchNotifIdFk.
     * @return the value of BranchNotifIdFk
     */
    public Number getBranchNotifIdFk() {
        return (Number) getAttributeInternal(BRANCHNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchNotifIdFk.
     * @param value value to set the BranchNotifIdFk
     */
    public void setBranchNotifIdFk(Number value) {
        setAttributeInternal(BRANCHNOTIFIDFK, value);
    }

    /**
     * Gets the attribute value for DssNotifIdFk, using the alias name DssNotifIdFk.
     * @return the value of DssNotifIdFk
     */
    public Number getDssNotifIdFk() {
        return (Number) getAttributeInternal(DSSNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssNotifIdFk.
     * @param value value to set the DssNotifIdFk
     */
    public void setDssNotifIdFk(Number value) {
        setAttributeInternal(DSSNOTIFIDFK, value);
    }


    /**
     * Gets the attribute value for CodDocNumber, using the alias name CodDocNumber.
     * @return the value of CodDocNumber
     */
    public String getCodDocNumber() {
        return (String) getAttributeInternal(CODDOCNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CodDocNumber.
     * @param value value to set the CodDocNumber
     */
    public void setCodDocNumber(String value) {
        setAttributeInternal(CODDOCNUMBER, value);
    }

    /**
     * Gets the attribute value for WorkflowNotificationId, using the alias name WorkflowNotificationId.
     * @return the value of WorkflowNotificationId
     */
    public Number getWorkflowNotificationId() {
        return (Number) getAttributeInternal(WORKFLOWNOTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowNotificationId.
     * @param value value to set the WorkflowNotificationId
     */
    public void setWorkflowNotificationId(Number value) {
        setAttributeInternal(WORKFLOWNOTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for WorkflowStatus, using the alias name WorkflowStatus.
     * @return the value of WorkflowStatus
     */
    public String getWorkflowStatus() {
        return (String) getAttributeInternal(WORKFLOWSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowStatus.
     * @param value value to set the WorkflowStatus
     */
    public void setWorkflowStatus(String value) {
        setAttributeInternal(WORKFLOWSTATUS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDssCodMgrRecruitmentForm() {
        return (RowIterator) getAttributeInternal(DSSCODMGRRECRUITMENTFORM);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDssCodNewRecruitedMgr() {
        return (RowIterator) getAttributeInternal(DSSCODNEWRECRUITEDMGR);
    }


    /**
     * @param codIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number codIdPk) {
        return new Key(new Object[] { codIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         Date currentDate = new Date();
         setEnterDate((Date) currentDate.getCurrentDate());
         setLastUpdatedDate((Date) currentDate.getCurrentDate());
         SequenceImpl seq = new SequenceImpl("DSS_CHANGE_OF_DESIGNATION_SEQ", getDBTransaction());
         setCodIdPk(seq.getSequenceNumber());
         
//         setBranchStatus("INCOMPLETE");
//         setDssStatus("INCOMPLETE");
         
         FacesContext fctx = FacesContext.getCurrentInstance();
         ExternalContext ectx = fctx.getExternalContext();
         HttpSession userSession = (HttpSession) ectx.getSession(false);
         try {
             setUserIdFk(new Number(userSession.getAttribute("pUserId")));
             setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
         } catch (SQLException ex) {
             setUserIdFk(new Number(0));
             setLastUpdatedBy(new Number(0));
         }
     }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            DBTransaction txn = getDBTransaction();
            CallableStatement callableStatement =
                txn.createCallableStatement("begin ? := dss_all_pkg.GET_COD_NUMBER; end;", DBTransaction.DEFAULT);
            try {
                callableStatement.registerOutParameter(1, Types.VARCHAR);
                callableStatement.executeUpdate();
                String vCodNumber = callableStatement.getString(1);
                callableStatement.close();
                setCodDocNumber(vCodNumber);
            } catch (SQLException sqle) {
                try {
                    callableStatement.close();
                } catch (SQLException f) {
                }
            }
        }
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
}

