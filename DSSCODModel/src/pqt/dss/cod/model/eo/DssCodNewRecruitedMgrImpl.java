package pqt.dss.cod.model.eo;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 10 16:17:44 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssCodNewRecruitedMgrImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NewlyRecruitedMgrIdPk,
        Month,
        Consultants,
        TeamLeaders,
        ABUH,
        BUH,
        Producers,
        Cases,
        Contribution,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        ChangeOfDesigIdFk1,
        DssChangeOfDesignation;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int NEWLYRECRUITEDMGRIDPK = AttributesEnum.NewlyRecruitedMgrIdPk.index();
    public static final int MONTH = AttributesEnum.Month.index();
    public static final int CONSULTANTS = AttributesEnum.Consultants.index();
    public static final int TEAMLEADERS = AttributesEnum.TeamLeaders.index();
    public static final int ABUH = AttributesEnum.ABUH.index();
    public static final int BUH = AttributesEnum.BUH.index();
    public static final int PRODUCERS = AttributesEnum.Producers.index();
    public static final int CASES = AttributesEnum.Cases.index();
    public static final int CONTRIBUTION = AttributesEnum.Contribution.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int CHANGEOFDESIGIDFK1 = AttributesEnum.ChangeOfDesigIdFk1.index();
    public static final int DSSCHANGEOFDESIGNATION = AttributesEnum.DssChangeOfDesignation.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssCodNewRecruitedMgrImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.cod.model.eo.DssCodNewRecruitedMgr");
    }


    /**
     * Gets the attribute value for NewlyRecruitedMgrIdPk, using the alias name NewlyRecruitedMgrIdPk.
     * @return the value of NewlyRecruitedMgrIdPk
     */
    public Number getNewlyRecruitedMgrIdPk() {
        return (Number) getAttributeInternal(NEWLYRECRUITEDMGRIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewlyRecruitedMgrIdPk.
     * @param value value to set the NewlyRecruitedMgrIdPk
     */
    public void setNewlyRecruitedMgrIdPk(Number value) {
        setAttributeInternal(NEWLYRECRUITEDMGRIDPK, value);
    }

    /**
     * Gets the attribute value for Month, using the alias name Month.
     * @return the value of Month
     */
    public Date getMonth() {
        return (Date) getAttributeInternal(MONTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Month.
     * @param value value to set the Month
     */
    public void setMonth(Date value) {
        setAttributeInternal(MONTH, value);
    }

    /**
     * Gets the attribute value for Consultants, using the alias name Consultants.
     * @return the value of Consultants
     */
    public String getConsultants() {
        return (String) getAttributeInternal(CONSULTANTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Consultants.
     * @param value value to set the Consultants
     */
    public void setConsultants(String value) {
        setAttributeInternal(CONSULTANTS, value);
    }

    /**
     * Gets the attribute value for TeamLeaders, using the alias name TeamLeaders.
     * @return the value of TeamLeaders
     */
    public String getTeamLeaders() {
        return (String) getAttributeInternal(TEAMLEADERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TeamLeaders.
     * @param value value to set the TeamLeaders
     */
    public void setTeamLeaders(String value) {
        setAttributeInternal(TEAMLEADERS, value);
    }

    /**
     * Gets the attribute value for ABUH, using the alias name ABUH.
     * @return the value of ABUH
     */
    public String getABUH() {
        return (String) getAttributeInternal(ABUH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ABUH.
     * @param value value to set the ABUH
     */
    public void setABUH(String value) {
        setAttributeInternal(ABUH, value);
    }

    /**
     * Gets the attribute value for BUH, using the alias name BUH.
     * @return the value of BUH
     */
    public String getBUH() {
        return (String) getAttributeInternal(BUH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BUH.
     * @param value value to set the BUH
     */
    public void setBUH(String value) {
        setAttributeInternal(BUH, value);
    }

    /**
     * Gets the attribute value for Producers, using the alias name Producers.
     * @return the value of Producers
     */
    public String getProducers() {
        return (String) getAttributeInternal(PRODUCERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Producers.
     * @param value value to set the Producers
     */
    public void setProducers(String value) {
        setAttributeInternal(PRODUCERS, value);
    }

    /**
     * Gets the attribute value for Cases, using the alias name Cases.
     * @return the value of Cases
     */
    public String getCases() {
        return (String) getAttributeInternal(CASES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cases.
     * @param value value to set the Cases
     */
    public void setCases(String value) {
        setAttributeInternal(CASES, value);
    }

    /**
     * Gets the attribute value for Contribution, using the alias name Contribution.
     * @return the value of Contribution
     */
    public String getContribution() {
        return (String) getAttributeInternal(CONTRIBUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Contribution.
     * @param value value to set the Contribution
     */
    public void setContribution(String value) {
        setAttributeInternal(CONTRIBUTION, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ChangeOfDesigIdFk1, using the alias name ChangeOfDesigIdFk1.
     * @return the value of ChangeOfDesigIdFk1
     */
    public Number getChangeOfDesigIdFk1() {
        return (Number) getAttributeInternal(CHANGEOFDESIGIDFK1);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChangeOfDesigIdFk1.
     * @param value value to set the ChangeOfDesigIdFk1
     */
    public void setChangeOfDesigIdFk1(Number value) {
        setAttributeInternal(CHANGEOFDESIGIDFK1, value);
    }

    /**
     * @return the associated entity DssChangeOfDesignationImpl.
     */
    public DssChangeOfDesignationImpl getDssChangeOfDesignation() {
        return (DssChangeOfDesignationImpl) getAttributeInternal(DSSCHANGEOFDESIGNATION);
    }

    /**
     * Sets <code>value</code> as the associated entity DssChangeOfDesignationImpl.
     */
    public void setDssChangeOfDesignation(DssChangeOfDesignationImpl value) {
        setAttributeInternal(DSSCHANGEOFDESIGNATION, value);
    }


    /**
     * @param newlyRecruitedMgrIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number newlyRecruitedMgrIdPk) {
        return new Key(new Object[] { newlyRecruitedMgrIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         Date currentDate = new Date();
         setEnterDate((Date) currentDate.getCurrentDate());
         setLastUpdatedDate((Date) currentDate.getCurrentDate());
         SequenceImpl seq = new SequenceImpl("DSS_COD_NEW_RECRUITED_MGR_SEQ", getDBTransaction());
         setNewlyRecruitedMgrIdPk(seq.getSequenceNumber());
         
//         setBranchStatus("INCOMPLETE");
//         setDssStatus("INCOMPLET");
//         
         FacesContext fctx = FacesContext.getCurrentInstance();
         ExternalContext ectx = fctx.getExternalContext();
         HttpSession userSession = (HttpSession) ectx.getSession(false);
         try {
             setUserIdFk(new Number(userSession.getAttribute("pUserId")));
             setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
         } catch (SQLException ex) {
             setUserIdFk(new Number(0));
             setLastUpdatedBy(new Number(0));
         }
     }


    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
}

